---
import { Home } from '@lucide/astro';
import componentsData from '../assets/ui/components.json';

export interface Props {
  title?: string;
  subtitle?: string;
  backgroundImage?: string;
  showCard?: boolean;
  ctaButton?: boolean;
  showBreadCrumbs?: boolean;
  currentPath?: string;
  parentComponent?: string;
}

const props = Astro.props;
const heroData = {
  title: props.title || 'Repuestos de calidad para equipos mineros',
  subtitle: props.subtitle ?? '',
  backgroundImage:
    props.backgroundImage ||
    componentsData.hero?.backgroundImage ||
    '/hero-bg.svg',
  showCard:
    props.showCard !== undefined
      ? props.showCard
      : componentsData.hero?.card || true,
  showBreadCrumbs: props.showBreadCrumbs ?? false,
  ctaButton: props.ctaButton ?? false,
  currentPath: props.currentPath || Astro.url.pathname,
  parentComponent: props.parentComponent,
};

const generateBreadcrumbs = () => {
  const path = heroData.currentPath;
  let breadcrumbs = [{ name: 'Home', url: '/' }];

  if (path.includes('/productos')) {
    breadcrumbs.push({ name: 'Productos', url: '/productos' });
  }

  if (heroData.parentComponent && heroData.parentComponent in componentsData) {
    const parentData =
      componentsData[heroData.parentComponent as keyof typeof componentsData];
    breadcrumbs.push({
      name:
        'title' in parentData
          ? parentData.title
          : heroData.parentComponent || 'Component',
      url: `/productos/${heroData.parentComponent}`,
    });
  }

  const currentPageName = heroData.title;
  const lastBreadcrumb = breadcrumbs[breadcrumbs.length - 1];
  if (
    path !== '/' &&
    path !== '/productos' &&
    lastBreadcrumb.name !== currentPageName
  ) {
    breadcrumbs.push({ name: currentPageName, url: path });
  }

  return breadcrumbs;
};

const breadcrumbs = generateBreadcrumbs();
---

<section class="relative w-full h-[clamp(50vh,80vw,80vh)]">
  <div class="absolute inset-0 z-0">
    <div
      class="w-full h-full bg-cover bg-center"
      style={{ backgroundImage: `url('${heroData.backgroundImage}')` }}
    >
    </div>
  </div>
  {
    heroData.showCard && (
      <div class="absolute left-[clamp(2rem,11vw,11rem)] bottom-[clamp(2rem,5vw,5rem)] bg-black/10 flex items-center justify-center z-10">
        <div class="bg-[#004B6480]/80 h-[clamp(15rem,19vw,19rem)] w-[clamp(30rem,45vw,45rem)] rounded-md">
          {/* Breadcrumbs navigation */}
          {heroData.showBreadCrumbs && (
            <div class="flex items-center ml-[clamp(1rem,2vw,2rem)] mt-[clamp(1rem,2vw,2rem)] text-white">
              {breadcrumbs.map((crumb, index) => (
                <>
                  {index > 0 && (
                    <span class="mx-[clamp(0.5rem,1vw,0.5rem)] sm:hidden md:flex">
                      &rarr;
                    </span>
                  )}
                  <a
                    href={crumb.url}
                    class={`sm:hidden hover:text-[#f5a623] md:flex items-center text-[clamp(0.875rem,1.5vw,1rem)] ${index === breadcrumbs.length - 1 ? 'font-semibold' : 'font-light'}`}
                  >
                    {index === 0 && <Home class="size-4 mr-1" />}
                    {crumb.name
                      .toLowerCase()
                      .normalize('NFD')
                      .replace(/[\u0300-\u036f]/g, '')
                      .replace(/\s+/g, '-')}
                  </a>
                </>
              ))}
            </div>
          )}

          <h1 class="text-[clamp(1.75rem,2.8vw,2.8rem)] font-bold text-white mt-[clamp(1rem,2vw,2rem)] ml-[clamp(1rem,2.1vw,2.1rem)] leading-tight">
            {heroData.title}
          </h1>
          <p class="text-[clamp(1.25rem,2.125vw,2.125rem)] text-white mt-[clamp(0.875rem,1.375vw,1.375rem)] ml-[clamp(1rem,2vw,2rem)]">
            {heroData.subtitle}
          </p>
          {heroData.ctaButton && (
            <button class="ml-[clamp(1rem,2vw,2rem)] mt-[clamp(1rem,1.5vw,1.5rem)] bg-[#f5a623] hover:bg-[#f5a623]/80 rounded-lg px-[clamp(3rem,5vw,5rem)] py-[clamp(0.75rem,1.5vw,0.75rem)] text-[clamp(1rem,1.5vw,1.125rem)] text-white">
              Cotizar
            </button>
          )}
        </div>
      </div>
    )
  }
</section>
